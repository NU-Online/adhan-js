{"version":3,"sources":["webpack://adhan/webpack/universalModuleDefinition","webpack://adhan/webpack/bootstrap","webpack://adhan/./src/Coordinates.js","webpack://adhan/./src/Rounding.js","webpack://adhan/./src/DateUtils.js","webpack://adhan/./src/MathUtils.js","webpack://adhan/./src/Shafaq.js","webpack://adhan/./src/Astronomical.js","webpack://adhan/./src/SolarCoordinates.js","webpack://adhan/./src/SolarTime.js","webpack://adhan/./src/TimeComponents.js","webpack://adhan/./src/Prayer.js","webpack://adhan/./src/Madhab.js","webpack://adhan/./src/PolarCircleResolution.js","webpack://adhan/./src/PrayerTimes.js","webpack://adhan/./src/HighLatitudeRule.js","webpack://adhan/./src/CalculationParameters.js","webpack://adhan/./src/CalculationMethod.js","webpack://adhan/./src/Qibla.js","webpack://adhan/./src/SunnahTimes.js","webpack://adhan/./src/Adhan.js"],"names":["Coordinates","constructor","latitude","longitude","Rounding","Nearest","Up","None","dateByAddingDays","date","days","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","Date","dateByAddingMinutes","dateByAddingSeconds","getTime","roundedMinute","rounding","getUTCSeconds","offset","dayOfYear","returnedDayOfYear","feb","Astronomical","isLeapYear","months","i","isValidDate","isNaN","valueOf","degreesToRadians","degrees","Math","PI","radiansToDegrees","radians","normalizeToScale","number","max","floor","unwindAngle","angle","quadrantShiftAngle","round","Shafaq","General","Ahmer","Abyad","meanSolarLongitude","julianCentury","T","term1","term2","term3","pow","L0","meanLunarLongitude","Lp","ascendingLunarNodeLongitude","term4","Omega","meanSolarAnomaly","M","solarEquationOfTheCenter","meanAnomaly","Mrad","sin","apparentSolarLongitude","meanLongitude","Lambda","meanObliquityOfTheEcliptic","apparentObliquityOfTheEcliptic","Epsilon0","O","cos","meanSiderealTime","JD","Theta","nutationInLongitude","solarLongitude","lunarLongitude","ascendingNode","nutationInObliquity","altitudeOfCelestialBody","observerLatitude","declination","localHourAngle","Phi","delta","H","asin","approximateTransit","siderealTime","rightAscension","L","Theta0","a2","Lw","correctedTransit","previousRightAscension","nextRightAscension","m0","a1","a3","a","interpolateAngles","dm","correctedHourAngle","coordinates","afterTransit","previousDeclination","nextDeclination","h0","d2","d1","d3","H0","acos","m","interpolate","h","y2","y1","y3","n","b","c","julianDay","trunc","x","ceil","Y","D","A","B","i0","i1","seasonAdjustedMorningTwilight","sunrise","abs","d","adjustment","dyy","daysSinceSolstice","seasonAdjustedEveningTwilight","sunset","shafaq","northernOffset","southernOffset","daysInYear","SolarCoordinates","dPsi","dEpsilon","EpsilonApparent","atan2","apparentSiderealTime","SolarTime","observer","solar","prevSolar","nextSolar","solarAltitude","approxTransit","transit","hourAngle","afternoon","shadowLength","tangent","inverse","tan","atan","TimeComponents","utcDate","UTC","Prayer","Fajr","Sunrise","Dhuhr","Asr","Maghrib","Isha","Madhab","Shafi","Hanafi","madhab","PolarCircleResolution","AqrabBalad","AqrabYaum","Unresolved","LATITUDE_VARIATION_STEP","UNSAFE_LATITUDE","isValidSolarTime","solarTime","aqrabYaumResolver","daysAdded","direction","testDate","setDate","tomorrow","tomorrowSolarTime","aqrabBaladResolver","sign","polarCircleResolvedValues","resolver","defaultReturn","PrayerTimes","calculationParameters","fajrTime","sunriseTime","dhuhrTime","asrTime","maghribTime","ishaTime","nightFraction","sunsetTime","polarCircleResolver","polarCircleResolution","resolved","dateComponents","tomorrowSunrise","night","fajrAngle","method","safeFajr","portion","nightPortions","fajr","ishaInterval","ishaAngle","safeIsha","isha","maghribAngle","angleBasedMaghrib","fajrAdjustment","adjustments","methodAdjustments","sunriseAdjustment","dhuhrAdjustment","dhuhr","asrAdjustment","asr","maghribAdjustment","maghrib","ishaAdjustment","timeForPrayer","prayer","currentPrayer","nextPrayer","HighLatitudeRule","MiddleOfTheNight","SeventhOfTheNight","TwilightAngle","recommended","CalculationParameters","methodName","highLatitudeRule","CalculationMethod","MuslimWorldLeague","params","Egyptian","Karachi","UmmAlQura","Dubai","MoonsightingCommittee","NorthAmerica","Kuwait","Qatar","Singapore","Tehran","Turkey","Other","qibla","makkah","SunnahTimes","prayerTimes","nextDay","nextDayPrayerTimes","nightDuration","middleOfTheNight","lastThirdOfTheNight","adhan","Qibla"],"mappings":"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","file":"Adhan.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"adhan\"] = factory();\n\telse\n\t\troot[\"adhan\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class Coordinates {\n  constructor(latitude, longitude) {\n    this.latitude = latitude;\n    this.longitude = longitude;\n  }\n}\n","export const Rounding = {\n  Nearest: 'nearest',\n  Up: 'up',\n  None: 'none',\n};\n","import Astronomical from './Astronomical';\nimport { Rounding } from './Rounding';\n\nexport function dateByAddingDays(date, days) {\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const day = date.getDate() + days;\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  return new Date(year, month, day, hours, minutes, seconds);\n}\n\nexport function dateByAddingMinutes(date, minutes) {\n  return dateByAddingSeconds(date, minutes * 60);\n}\n\nexport function dateByAddingSeconds(date, seconds) {\n  return new Date(date.getTime() + seconds * 1000);\n}\n\nexport function roundedMinute(date, rounding = Rounding.Nearest) {\n  const seconds = date.getUTCSeconds();\n  let offset = seconds >= 30 ? 60 - seconds : -1 * seconds;\n  if (rounding === Rounding.Up) {\n    offset = 60 - seconds;\n  } else if (rounding === Rounding.None) {\n    offset = 0;\n  }\n\n  return dateByAddingSeconds(date, offset);\n}\n\nexport function dayOfYear(date) {\n  let returnedDayOfYear = 0;\n  const feb = Astronomical.isLeapYear(date.getFullYear()) ? 29 : 28;\n  const months = [31, feb, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  for (let i = 0; i < date.getMonth(); i++) {\n    returnedDayOfYear += months[i];\n  }\n\n  returnedDayOfYear += date.getDate();\n\n  return returnedDayOfYear;\n}\n\nexport function isValidDate(date) {\n  return date instanceof Date && !isNaN(date.valueOf());\n}\n","export function degreesToRadians(degrees) {\n  return (degrees * Math.PI) / 180.0;\n}\n\nexport function radiansToDegrees(radians) {\n  return (radians * 180.0) / Math.PI;\n}\n\nexport function normalizeToScale(number, max) {\n  return number - max * Math.floor(number / max);\n}\n\nexport function unwindAngle(angle) {\n  return normalizeToScale(angle, 360.0);\n}\n\nexport function quadrantShiftAngle(angle) {\n  if (angle >= -180 && angle <= 180) {\n    return angle;\n  }\n\n  return angle - 360 * Math.round(angle / 360);\n}\n","// Shafaq is the twilight in the sky. Different madhabs define the appearance of\n// twilight differently. These values are used by the MoonsightingComittee method\n// for the different ways to calculate Isha.\nexport const Shafaq = {\n  // General is a combination of Ahmer and Abyad.\n  General: 'general',\n\n  // Ahmer means the twilight is the red glow in the sky. Used by the Shafi, Maliki, and Hanbali madhabs.\n  Ahmer: 'ahmer',\n\n  // Abyad means the twilight is the white glow in the sky. Used by the Hanafi madhab.\n  Abyad: 'abyad',\n};\n","/* eslint-disable max-params, max-lines */\nimport { dateByAddingSeconds } from './DateUtils';\nimport {\n  degreesToRadians,\n  normalizeToScale,\n  quadrantShiftAngle,\n  radiansToDegrees,\n  unwindAngle,\n} from './MathUtils';\nimport { Shafaq } from './Shafaq';\n\nconst Astronomical = {\n  /* The geometric mean longitude of the sun in degrees. */\n  meanSolarLongitude(julianCentury) {\n    const T = julianCentury;\n    /* Equation from Astronomical Algorithms page 163 */\n    const term1 = 280.4664567;\n    const term2 = 36000.76983 * T;\n    const term3 = 0.0003032 * Math.pow(T, 2);\n    const L0 = term1 + term2 + term3;\n    return unwindAngle(L0);\n  },\n\n  /* The geometric mean longitude of the moon in degrees. */\n  meanLunarLongitude(julianCentury) {\n    const T = julianCentury;\n    /* Equation from Astronomical Algorithms page 144 */\n    const term1 = 218.3165;\n    const term2 = 481267.8813 * T;\n    const Lp = term1 + term2;\n    return unwindAngle(Lp);\n  },\n\n  ascendingLunarNodeLongitude(julianCentury) {\n    const T = julianCentury;\n    /* Equation from Astronomical Algorithms page 144 */\n    const term1 = 125.04452;\n    const term2 = 1934.136261 * T;\n    const term3 = 0.0020708 * Math.pow(T, 2);\n    const term4 = Math.pow(T, 3) / 450000;\n    const Omega = term1 - term2 + term3 + term4;\n    return unwindAngle(Omega);\n  },\n\n  /* The mean anomaly of the sun. */\n  meanSolarAnomaly(julianCentury) {\n    const T = julianCentury;\n    /* Equation from Astronomical Algorithms page 163 */\n    const term1 = 357.52911;\n    const term2 = 35999.05029 * T;\n    const term3 = 0.0001537 * Math.pow(T, 2);\n    const M = term1 + term2 - term3;\n    return unwindAngle(M);\n  },\n\n  /* The Sun's equation of the center in degrees. */\n  solarEquationOfTheCenter(julianCentury, meanAnomaly) {\n    const T = julianCentury;\n    /* Equation from Astronomical Algorithms page 164 */\n    const Mrad = degreesToRadians(meanAnomaly);\n    const term1 =\n      (1.914602 - 0.004817 * T - 0.000014 * Math.pow(T, 2)) * Math.sin(Mrad);\n    const term2 = (0.019993 - 0.000101 * T) * Math.sin(2 * Mrad);\n    const term3 = 0.000289 * Math.sin(3 * Mrad);\n    return term1 + term2 + term3;\n  },\n\n  /* The apparent longitude of the Sun, referred to the\n        true equinox of the date. */\n  apparentSolarLongitude(julianCentury, meanLongitude) {\n    const T = julianCentury;\n    const L0 = meanLongitude;\n    /* Equation from Astronomical Algorithms page 164 */\n    const longitude =\n      L0 +\n      Astronomical.solarEquationOfTheCenter(\n        T,\n        Astronomical.meanSolarAnomaly(T),\n      );\n    const Omega = 125.04 - 1934.136 * T;\n    const Lambda =\n      longitude - 0.00569 - 0.00478 * Math.sin(degreesToRadians(Omega));\n    return unwindAngle(Lambda);\n  },\n\n  /* The mean obliquity of the ecliptic, formula\n        adopted by the International Astronomical Union.\n        Represented in degrees. */\n  meanObliquityOfTheEcliptic(julianCentury) {\n    const T = julianCentury;\n    /* Equation from Astronomical Algorithms page 147 */\n    const term1 = 23.439291;\n    const term2 = 0.013004167 * T;\n    const term3 = 0.0000001639 * Math.pow(T, 2);\n    const term4 = 0.0000005036 * Math.pow(T, 3);\n    return term1 - term2 - term3 + term4;\n  },\n\n  /* The mean obliquity of the ecliptic, corrected for\n        calculating the apparent position of the sun, in degrees. */\n  apparentObliquityOfTheEcliptic(julianCentury, meanObliquityOfTheEcliptic) {\n    const T = julianCentury;\n    const Epsilon0 = meanObliquityOfTheEcliptic;\n    /* Equation from Astronomical Algorithms page 165 */\n    const O = 125.04 - 1934.136 * T;\n    return Epsilon0 + 0.00256 * Math.cos(degreesToRadians(O));\n  },\n\n  /* Mean sidereal time, the hour angle of the vernal equinox, in degrees. */\n  meanSiderealTime(julianCentury) {\n    const T = julianCentury;\n    /* Equation from Astronomical Algorithms page 165 */\n    const JD = T * 36525 + 2451545.0;\n    const term1 = 280.46061837;\n    const term2 = 360.98564736629 * (JD - 2451545);\n    const term3 = 0.000387933 * Math.pow(T, 2);\n    const term4 = Math.pow(T, 3) / 38710000;\n    const Theta = term1 + term2 + term3 - term4;\n    return unwindAngle(Theta);\n  },\n\n  nutationInLongitude(\n    julianCentury,\n    solarLongitude,\n    lunarLongitude,\n    ascendingNode,\n  ) {\n    const L0 = solarLongitude;\n    const Lp = lunarLongitude;\n    const Omega = ascendingNode;\n    /* Equation from Astronomical Algorithms page 144 */\n    const term1 = (-17.2 / 3600) * Math.sin(degreesToRadians(Omega));\n    const term2 = (1.32 / 3600) * Math.sin(2 * degreesToRadians(L0));\n    const term3 = (0.23 / 3600) * Math.sin(2 * degreesToRadians(Lp));\n    const term4 = (0.21 / 3600) * Math.sin(2 * degreesToRadians(Omega));\n    return term1 - term2 - term3 + term4;\n  },\n\n  nutationInObliquity(\n    julianCentury,\n    solarLongitude,\n    lunarLongitude,\n    ascendingNode,\n  ) {\n    const L0 = solarLongitude;\n    const Lp = lunarLongitude;\n    const Omega = ascendingNode;\n    /* Equation from Astronomical Algorithms page 144 */\n    const term1 = (9.2 / 3600) * Math.cos(degreesToRadians(Omega));\n    const term2 = (0.57 / 3600) * Math.cos(2 * degreesToRadians(L0));\n    const term3 = (0.1 / 3600) * Math.cos(2 * degreesToRadians(Lp));\n    const term4 = (0.09 / 3600) * Math.cos(2 * degreesToRadians(Omega));\n    return term1 + term2 + term3 - term4;\n  },\n\n  altitudeOfCelestialBody(observerLatitude, declination, localHourAngle) {\n    const Phi = observerLatitude;\n    const delta = declination;\n    const H = localHourAngle;\n    /* Equation from Astronomical Algorithms page 93 */\n    const term1 =\n      Math.sin(degreesToRadians(Phi)) * Math.sin(degreesToRadians(delta));\n    const term2 =\n      Math.cos(degreesToRadians(Phi)) *\n      Math.cos(degreesToRadians(delta)) *\n      Math.cos(degreesToRadians(H));\n    return radiansToDegrees(Math.asin(term1 + term2));\n  },\n\n  approximateTransit(longitude, siderealTime, rightAscension) {\n    const L = longitude;\n    const Theta0 = siderealTime;\n    const a2 = rightAscension;\n    /* Equation from page Astronomical Algorithms 102 */\n    const Lw = L * -1;\n    return normalizeToScale((a2 + Lw - Theta0) / 360, 1);\n  },\n\n  /* The time at which the sun is at its highest point in the sky (in universal time) */\n  correctedTransit(\n    approximateTransit,\n    longitude,\n    siderealTime,\n    rightAscension,\n    previousRightAscension,\n    nextRightAscension,\n  ) {\n    const m0 = approximateTransit;\n    const L = longitude;\n    const Theta0 = siderealTime;\n    const a2 = rightAscension;\n    const a1 = previousRightAscension;\n    const a3 = nextRightAscension;\n    /* Equation from page Astronomical Algorithms 102 */\n    const Lw = L * -1;\n    const Theta = unwindAngle(Theta0 + 360.985647 * m0);\n    const a = unwindAngle(Astronomical.interpolateAngles(a2, a1, a3, m0));\n    const H = quadrantShiftAngle(Theta - Lw - a);\n    const dm = H / -360;\n    return (m0 + dm) * 24;\n  },\n\n  correctedHourAngle(\n    approximateTransit,\n    angle,\n    coordinates,\n    afterTransit,\n    siderealTime,\n    rightAscension,\n    previousRightAscension,\n    nextRightAscension,\n    declination,\n    previousDeclination,\n    nextDeclination,\n  ) {\n    const m0 = approximateTransit;\n    const h0 = angle;\n    const Theta0 = siderealTime;\n    const a2 = rightAscension;\n    const a1 = previousRightAscension;\n    const a3 = nextRightAscension;\n    const d2 = declination;\n    const d1 = previousDeclination;\n    const d3 = nextDeclination;\n\n    /* Equation from page Astronomical Algorithms 102 */\n    const Lw = coordinates.longitude * -1;\n    const term1 =\n      Math.sin(degreesToRadians(h0)) -\n      Math.sin(degreesToRadians(coordinates.latitude)) *\n        Math.sin(degreesToRadians(d2));\n    const term2 =\n      Math.cos(degreesToRadians(coordinates.latitude)) *\n      Math.cos(degreesToRadians(d2));\n    const H0 = radiansToDegrees(Math.acos(term1 / term2));\n    const m = afterTransit ? m0 + H0 / 360 : m0 - H0 / 360;\n    const Theta = unwindAngle(Theta0 + 360.985647 * m);\n    const a = unwindAngle(Astronomical.interpolateAngles(a2, a1, a3, m));\n    const delta = Astronomical.interpolate(d2, d1, d3, m);\n    const H = Theta - Lw - a;\n    const h = Astronomical.altitudeOfCelestialBody(\n      coordinates.latitude,\n      delta,\n      H,\n    );\n    const term3 = h - h0;\n    const term4 =\n      360 *\n      Math.cos(degreesToRadians(delta)) *\n      Math.cos(degreesToRadians(coordinates.latitude)) *\n      Math.sin(degreesToRadians(H));\n    const dm = term3 / term4;\n    return (m + dm) * 24;\n  },\n\n  /* Interpolation of a value given equidistant\n        previous and next values and a factor\n        equal to the fraction of the interpolated\n        point's time over the time between values. */\n  interpolate(y2, y1, y3, n) {\n    /* Equation from Astronomical Algorithms page 24 */\n    const a = y2 - y1;\n    const b = y3 - y2;\n    const c = b - a;\n    return y2 + (n / 2) * (a + b + n * c);\n  },\n\n  /* Interpolation of three angles, accounting for\n        angle unwinding. */\n  interpolateAngles(y2, y1, y3, n) {\n    /* Equation from Astronomical Algorithms page 24 */\n    const a = unwindAngle(y2 - y1);\n    const b = unwindAngle(y3 - y2);\n    const c = b - a;\n    return y2 + (n / 2) * (a + b + n * c);\n  },\n\n  /* The Julian Day for the given Gregorian date components. */\n  julianDay(year, month, day, hours) {\n    /* Equation from Astronomical Algorithms page 60 */\n    if (typeof hours === 'undefined') {\n      hours = 0;\n    }\n\n    const trunc =\n      Math.trunc ||\n      function (x) {\n        return x < 0 ? Math.ceil(x) : Math.floor(x);\n      };\n\n    const Y = trunc(month > 2 ? year : year - 1);\n    const M = trunc(month > 2 ? month : month + 12);\n    const D = day + hours / 24;\n\n    const A = trunc(Y / 100);\n    const B = trunc(2 - A + trunc(A / 4));\n\n    const i0 = trunc(365.25 * (Y + 4716));\n    const i1 = trunc(30.6001 * (M + 1));\n\n    return i0 + i1 + D + B - 1524.5;\n  },\n\n  /* Julian century from the epoch. */\n  julianCentury(julianDay) {\n    /* Equation from Astronomical Algorithms page 163 */\n    return (julianDay - 2451545.0) / 36525;\n  },\n\n  /* Whether or not a year is a leap year (has 366 days). */\n  isLeapYear(year) {\n    if (year % 4 !== 0) {\n      return false;\n    }\n\n    if (year % 100 === 0 && year % 400 !== 0) {\n      return false;\n    }\n\n    return true;\n  },\n\n  seasonAdjustedMorningTwilight(latitude, dayOfYear, year, sunrise) {\n    const a = 75 + (28.65 / 55.0) * Math.abs(latitude);\n    const b = 75 + (19.44 / 55.0) * Math.abs(latitude);\n    const c = 75 + (32.74 / 55.0) * Math.abs(latitude);\n    const d = 75 + (48.1 / 55.0) * Math.abs(latitude);\n\n    const adjustment = (function () {\n      const dyy = Astronomical.daysSinceSolstice(dayOfYear, year, latitude);\n      if (dyy < 91) {\n        return a + ((b - a) / 91.0) * dyy;\n      } else if (dyy < 137) {\n        return b + ((c - b) / 46.0) * (dyy - 91);\n      } else if (dyy < 183) {\n        return c + ((d - c) / 46.0) * (dyy - 137);\n      } else if (dyy < 229) {\n        return d + ((c - d) / 46.0) * (dyy - 183);\n      } else if (dyy < 275) {\n        return c + ((b - c) / 46.0) * (dyy - 229);\n      } else {\n        return b + ((a - b) / 91.0) * (dyy - 275);\n      }\n    })();\n\n    return dateByAddingSeconds(sunrise, Math.round(adjustment * -60.0));\n  },\n\n  seasonAdjustedEveningTwilight(latitude, dayOfYear, year, sunset, shafaq) {\n    let a, b, c, d;\n    if (shafaq === Shafaq.Ahmer) {\n      a = 62 + (17.4 / 55.0) * Math.abs(latitude);\n      b = 62 - (7.16 / 55.0) * Math.abs(latitude);\n      c = 62 + (5.12 / 55.0) * Math.abs(latitude);\n      d = 62 + (19.44 / 55.0) * Math.abs(latitude);\n    } else if (shafaq === Shafaq.Abyad) {\n      a = 75 + (25.6 / 55.0) * Math.abs(latitude);\n      b = 75 + (7.16 / 55.0) * Math.abs(latitude);\n      c = 75 + (36.84 / 55.0) * Math.abs(latitude);\n      d = 75 + (81.84 / 55.0) * Math.abs(latitude);\n    } else {\n      a = 75 + (25.6 / 55.0) * Math.abs(latitude);\n      b = 75 + (2.05 / 55.0) * Math.abs(latitude);\n      c = 75 - (9.21 / 55.0) * Math.abs(latitude);\n      d = 75 + (6.14 / 55.0) * Math.abs(latitude);\n    }\n\n    const adjustment = (function () {\n      const dyy = Astronomical.daysSinceSolstice(dayOfYear, year, latitude);\n      if (dyy < 91) {\n        return a + ((b - a) / 91.0) * dyy;\n      } else if (dyy < 137) {\n        return b + ((c - b) / 46.0) * (dyy - 91);\n      } else if (dyy < 183) {\n        return c + ((d - c) / 46.0) * (dyy - 137);\n      } else if (dyy < 229) {\n        return d + ((c - d) / 46.0) * (dyy - 183);\n      } else if (dyy < 275) {\n        return c + ((b - c) / 46.0) * (dyy - 229);\n      } else {\n        return b + ((a - b) / 91.0) * (dyy - 275);\n      }\n    })();\n\n    return dateByAddingSeconds(sunset, Math.round(adjustment * 60.0));\n  },\n\n  daysSinceSolstice(dayOfYear, year, latitude) {\n    let daysSinceSolstice = 0;\n    const northernOffset = 10;\n    const southernOffset = Astronomical.isLeapYear(year) ? 173 : 172;\n    const daysInYear = Astronomical.isLeapYear(year) ? 366 : 365;\n\n    if (latitude >= 0) {\n      daysSinceSolstice = dayOfYear + northernOffset;\n      if (daysSinceSolstice >= daysInYear) {\n        daysSinceSolstice = daysSinceSolstice - daysInYear;\n      }\n    } else {\n      daysSinceSolstice = dayOfYear - southernOffset;\n      if (daysSinceSolstice < 0) {\n        daysSinceSolstice = daysSinceSolstice + daysInYear;\n      }\n    }\n\n    return daysSinceSolstice;\n  },\n};\n\nexport default Astronomical;\n","import Astronomical from './Astronomical';\nimport { degreesToRadians, radiansToDegrees, unwindAngle } from './MathUtils';\n\nexport default class SolarCoordinates {\n  constructor(julianDay) {\n    const T = Astronomical.julianCentury(julianDay);\n    const L0 = Astronomical.meanSolarLongitude(T);\n    const Lp = Astronomical.meanLunarLongitude(T);\n    const Omega = Astronomical.ascendingLunarNodeLongitude(T);\n    const Lambda = degreesToRadians(Astronomical.apparentSolarLongitude(T, L0));\n    const Theta0 = Astronomical.meanSiderealTime(T);\n    const dPsi = Astronomical.nutationInLongitude(T, L0, Lp, Omega);\n    const dEpsilon = Astronomical.nutationInObliquity(T, L0, Lp, Omega);\n    const Epsilon0 = Astronomical.meanObliquityOfTheEcliptic(T);\n    const EpsilonApparent = degreesToRadians(\n      Astronomical.apparentObliquityOfTheEcliptic(T, Epsilon0),\n    );\n\n    /* declination: The declination of the sun, the angle between\n            the rays of the Sun and the plane of the Earth's\n            equator, in degrees.\n            Equation from Astronomical Algorithms page 165 */\n    this.declination = radiansToDegrees(\n      Math.asin(Math.sin(EpsilonApparent) * Math.sin(Lambda)),\n    );\n\n    /* rightAscension: Right ascension of the Sun, the angular distance on the\n            celestial equator from the vernal equinox to the hour circle,\n            in degrees.\n            Equation from Astronomical Algorithms page 165 */\n    this.rightAscension = unwindAngle(\n      radiansToDegrees(\n        Math.atan2(\n          Math.cos(EpsilonApparent) * Math.sin(Lambda),\n          Math.cos(Lambda),\n        ),\n      ),\n    );\n\n    /* apparentSiderealTime: Apparent sidereal time, the hour angle of the vernal\n            equinox, in degrees.\n            Equation from Astronomical Algorithms page 88 */\n    this.apparentSiderealTime =\n      Theta0 +\n      (dPsi * 3600 * Math.cos(degreesToRadians(Epsilon0 + dEpsilon))) / 3600;\n  }\n}\n","import Astronomical from './Astronomical';\nimport { degreesToRadians, radiansToDegrees } from './MathUtils';\nimport SolarCoordinates from './SolarCoordinates';\n\nexport default class SolarTime {\n  constructor(date, coordinates) {\n    const julianDay = Astronomical.julianDay(\n      date.getFullYear(),\n      date.getMonth() + 1,\n      date.getDate(),\n      0,\n    );\n\n    this.observer = coordinates;\n    this.solar = new SolarCoordinates(julianDay);\n\n    this.prevSolar = new SolarCoordinates(julianDay - 1);\n    this.nextSolar = new SolarCoordinates(julianDay + 1);\n\n    const m0 = Astronomical.approximateTransit(\n      coordinates.longitude,\n      this.solar.apparentSiderealTime,\n      this.solar.rightAscension,\n    );\n    const solarAltitude = -50.0 / 60.0;\n\n    this.approxTransit = m0;\n\n    this.transit = Astronomical.correctedTransit(\n      m0,\n      coordinates.longitude,\n      this.solar.apparentSiderealTime,\n      this.solar.rightAscension,\n      this.prevSolar.rightAscension,\n      this.nextSolar.rightAscension,\n    );\n\n    this.sunrise = Astronomical.correctedHourAngle(\n      m0,\n      solarAltitude,\n      coordinates,\n      false,\n      this.solar.apparentSiderealTime,\n      this.solar.rightAscension,\n      this.prevSolar.rightAscension,\n      this.nextSolar.rightAscension,\n      this.solar.declination,\n      this.prevSolar.declination,\n      this.nextSolar.declination,\n    );\n\n    this.sunset = Astronomical.correctedHourAngle(\n      m0,\n      solarAltitude,\n      coordinates,\n      true,\n      this.solar.apparentSiderealTime,\n      this.solar.rightAscension,\n      this.prevSolar.rightAscension,\n      this.nextSolar.rightAscension,\n      this.solar.declination,\n      this.prevSolar.declination,\n      this.nextSolar.declination,\n    );\n  }\n\n  hourAngle(angle, afterTransit) {\n    return Astronomical.correctedHourAngle(\n      this.approxTransit,\n      angle,\n      this.observer,\n      afterTransit,\n      this.solar.apparentSiderealTime,\n      this.solar.rightAscension,\n      this.prevSolar.rightAscension,\n      this.nextSolar.rightAscension,\n      this.solar.declination,\n      this.prevSolar.declination,\n      this.nextSolar.declination,\n    );\n  }\n\n  afternoon(shadowLength) {\n    // TODO source shadow angle calculation\n    const tangent = Math.abs(this.observer.latitude - this.solar.declination);\n    const inverse = shadowLength + Math.tan(degreesToRadians(tangent));\n    const angle = radiansToDegrees(Math.atan(1.0 / inverse));\n    return this.hourAngle(angle, true);\n  }\n}\n","export default class TimeComponents {\n  constructor(number) {\n    this.hours = Math.floor(number);\n    this.minutes = Math.floor((number - this.hours) * 60);\n    this.seconds = Math.floor(\n      (number - (this.hours + this.minutes / 60)) * 60 * 60,\n    );\n    return this;\n  }\n\n  utcDate(year, month, date) {\n    return new Date(\n      Date.UTC(year, month, date, this.hours, this.minutes, this.seconds),\n    );\n  }\n}\n","const Prayer = {\n  Fajr: 'fajr',\n  Sunrise: 'sunrise',\n  Dhuhr: 'dhuhr',\n  Asr: 'asr',\n  Maghrib: 'maghrib',\n  Isha: 'isha',\n  None: 'none',\n};\n\nexport default Prayer;\n","export const Madhab = {\n  Shafi: 'shafi',\n  Hanafi: 'hanafi',\n};\n\nexport function shadowLength(madhab) {\n  switch (madhab) {\n    case Madhab.Shafi:\n      return 1;\n    case Madhab.Hanafi:\n      return 2;\n    default:\n      throw 'Invalid Madhab';\n  }\n}\n","import SolarTime from './SolarTime';\nimport { dateByAddingDays } from './DateUtils';\n\nexport const PolarCircleResolution = {\n  AqrabBalad: 'AqrabBalad',\n  AqrabYaum: 'AqrabYaum',\n  Unresolved: 'Unresolved',\n};\n\nconst LATITUDE_VARIATION_STEP = 0.5; // Degrees to add/remove at each resolution step\nconst UNSAFE_LATITUDE = 65; // Based on https://en.wikipedia.org/wiki/Midnight_sun\n\nconst isValidSolarTime = (solarTime) =>\n  solarTime && !isNaN(solarTime.sunrise) && !isNaN(solarTime.sunset);\n\nconst aqrabYaumResolver = (coordinates, date, daysAdded = 1, direction = 1) => {\n  if (daysAdded > Math.ceil(365 / 2)) {\n    return null;\n  }\n  const testDate = new Date(date.getTime());\n  testDate.setDate(testDate.getDate() + direction * daysAdded);\n  const tomorrow = dateByAddingDays(testDate, 1);\n  const solarTime = new SolarTime(testDate, coordinates);\n  const tomorrowSolarTime = new SolarTime(tomorrow, coordinates);\n\n  if (!isValidSolarTime(solarTime) || !isValidSolarTime(tomorrowSolarTime)) {\n    return aqrabYaumResolver(\n      coordinates,\n      date,\n      daysAdded + (direction > 0 ? 0 : 1),\n      -direction,\n    );\n  }\n\n  return {\n    date,\n    tomorrow,\n    coordinates,\n    solarTime,\n    tomorrowSolarTime,\n  };\n};\n\nconst aqrabBaladResolver = (coordinates, date, latitude) => {\n  const solarTime = new SolarTime(date, { ...coordinates, latitude });\n  const tomorrow = dateByAddingDays(date, 1);\n  const tomorrowSolarTime = new SolarTime(tomorrow, {\n    ...coordinates,\n    latitude,\n  });\n  if (!isValidSolarTime(solarTime) || !isValidSolarTime(tomorrowSolarTime)) {\n    return Math.abs(latitude) >= UNSAFE_LATITUDE\n      ? aqrabBaladResolver(\n          coordinates,\n          date,\n          latitude - Math.sign(latitude) * LATITUDE_VARIATION_STEP,\n        )\n      : null;\n  }\n\n  return {\n    date,\n    tomorrow,\n    coordinates: { latitude, longitude: coordinates.longitude },\n    solarTime,\n    tomorrowSolarTime,\n  };\n};\n\nexport const polarCircleResolvedValues = (resolver, date, coordinates) => {\n  const defaultReturn = {\n    date,\n    tomorrow: dateByAddingDays(date, 1),\n    coordinates,\n    solarTime: new SolarTime(date, coordinates),\n    tomorrowSolarTime: new SolarTime(dateByAddingDays(date, 1), coordinates),\n  };\n\n  switch (resolver) {\n    case PolarCircleResolution.AqrabYaum: {\n      return aqrabYaumResolver(coordinates, date) || defaultReturn;\n    }\n    case PolarCircleResolution.AqrabBalad: {\n      const { latitude } = coordinates;\n      return (\n        aqrabBaladResolver(\n          coordinates,\n          date,\n          latitude - Math.sign(latitude) * LATITUDE_VARIATION_STEP,\n        ) || defaultReturn\n      );\n    }\n    default: {\n      return defaultReturn;\n    }\n  }\n};\n","import SolarTime from './SolarTime';\nimport TimeComponents from './TimeComponents';\nimport Prayer from './Prayer';\nimport Astronomical from './Astronomical';\nimport {\n  dateByAddingDays,\n  dateByAddingMinutes,\n  dateByAddingSeconds,\n  roundedMinute,\n  dayOfYear,\n  isValidDate,\n} from './DateUtils';\nimport { shadowLength } from './Madhab';\nimport {\n  PolarCircleResolution,\n  polarCircleResolvedValues,\n} from './PolarCircleResolution';\n\nexport default class PrayerTimes {\n  // eslint-disable-next-line complexity\n  constructor(coordinates, date, calculationParameters) {\n    this.coordinates = coordinates;\n    this.date = date;\n    this.calculationParameters = calculationParameters;\n\n    let solarTime = new SolarTime(date, coordinates);\n\n    let fajrTime;\n    let sunriseTime;\n    let dhuhrTime;\n    let asrTime;\n    let maghribTime;\n    let ishaTime;\n\n    let nightFraction;\n\n    dhuhrTime = new TimeComponents(solarTime.transit).utcDate(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n    );\n    sunriseTime = new TimeComponents(solarTime.sunrise).utcDate(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n    );\n    let sunsetTime = new TimeComponents(solarTime.sunset).utcDate(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n    );\n    const tomorrow = dateByAddingDays(date, 1);\n    let tomorrowSolarTime = new SolarTime(tomorrow, coordinates);\n\n    const polarCircleResolver = calculationParameters.polarCircleResolution;\n    if (\n      (!isValidDate(sunriseTime) ||\n        !isValidDate(sunsetTime) ||\n        isNaN(tomorrowSolarTime.sunrise)) &&\n      polarCircleResolver !== PolarCircleResolution.Unresolved\n    ) {\n      const resolved = polarCircleResolvedValues(\n        polarCircleResolver,\n        date,\n        coordinates,\n      );\n      solarTime = resolved.solarTime;\n      tomorrowSolarTime = resolved.tomorrowSolarTime;\n      const dateComponents = [\n        date.getFullYear(),\n        date.getMonth(),\n        date.getDate(),\n      ];\n\n      dhuhrTime = new TimeComponents(solarTime.transit).utcDate(\n        ...dateComponents,\n      );\n      sunriseTime = new TimeComponents(solarTime.sunrise).utcDate(\n        ...dateComponents,\n      );\n      sunsetTime = new TimeComponents(solarTime.sunset).utcDate(\n        ...dateComponents,\n      );\n    }\n\n    // eslint-disable-next-line prefer-const\n    asrTime = new TimeComponents(\n      solarTime.afternoon(shadowLength(calculationParameters.madhab)),\n    ).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n\n    const tomorrowSunrise = new TimeComponents(\n      tomorrowSolarTime.sunrise,\n    ).utcDate(tomorrow.getFullYear(), tomorrow.getMonth(), tomorrow.getDate());\n    const night = (tomorrowSunrise - sunsetTime) / 1000;\n\n    fajrTime = new TimeComponents(\n      solarTime.hourAngle(-1 * calculationParameters.fajrAngle, false),\n    ).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n\n    // special case for moonsighting committee above latitude 55\n    if (\n      calculationParameters.method === 'MoonsightingCommittee' &&\n      coordinates.latitude >= 55\n    ) {\n      nightFraction = night / 7;\n      fajrTime = dateByAddingSeconds(sunriseTime, -nightFraction);\n    }\n\n    const safeFajr = (function () {\n      if (calculationParameters.method === 'MoonsightingCommittee') {\n        return Astronomical.seasonAdjustedMorningTwilight(\n          coordinates.latitude,\n          dayOfYear(date),\n          date.getFullYear(),\n          sunriseTime,\n        );\n      } else {\n        const portion = calculationParameters.nightPortions().fajr;\n        nightFraction = portion * night;\n        return dateByAddingSeconds(sunriseTime, -nightFraction);\n      }\n    })();\n\n    if (fajrTime === null || isNaN(fajrTime.getTime()) || safeFajr > fajrTime) {\n      fajrTime = safeFajr;\n    }\n\n    if (calculationParameters.ishaInterval > 0) {\n      ishaTime = dateByAddingMinutes(\n        sunsetTime,\n        calculationParameters.ishaInterval,\n      );\n    } else {\n      ishaTime = new TimeComponents(\n        solarTime.hourAngle(-1 * calculationParameters.ishaAngle, true),\n      ).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n\n      // special case for moonsighting committee above latitude 55\n      if (\n        calculationParameters.method === 'MoonsightingCommittee' &&\n        coordinates.latitude >= 55\n      ) {\n        nightFraction = night / 7;\n        ishaTime = dateByAddingSeconds(sunsetTime, nightFraction);\n      }\n\n      const safeIsha = (function () {\n        if (calculationParameters.method === 'MoonsightingCommittee') {\n          return Astronomical.seasonAdjustedEveningTwilight(\n            coordinates.latitude,\n            dayOfYear(date),\n            date.getFullYear(),\n            sunsetTime,\n            calculationParameters.shafaq,\n          );\n        } else {\n          const portion = calculationParameters.nightPortions().isha;\n          nightFraction = portion * night;\n          return dateByAddingSeconds(sunsetTime, nightFraction);\n        }\n      })();\n\n      if (\n        ishaTime == null ||\n        isNaN(ishaTime.getTime()) ||\n        safeIsha < ishaTime\n      ) {\n        ishaTime = safeIsha;\n      }\n    }\n\n    maghribTime = sunsetTime;\n    if (calculationParameters.maghribAngle) {\n      const angleBasedMaghrib = new TimeComponents(\n        solarTime.hourAngle(-1 * calculationParameters.maghribAngle, true),\n      ).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n      if (sunsetTime < angleBasedMaghrib && ishaTime > angleBasedMaghrib) {\n        maghribTime = angleBasedMaghrib;\n      }\n    }\n\n    const fajrAdjustment =\n      (calculationParameters.adjustments.fajr || 0) +\n      (calculationParameters.methodAdjustments.fajr || 0);\n    const sunriseAdjustment =\n      (calculationParameters.adjustments.sunrise || 0) +\n      (calculationParameters.methodAdjustments.sunrise || 0);\n    const dhuhrAdjustment =\n      (calculationParameters.adjustments.dhuhr || 0) +\n      (calculationParameters.methodAdjustments.dhuhr || 0);\n    const asrAdjustment =\n      (calculationParameters.adjustments.asr || 0) +\n      (calculationParameters.methodAdjustments.asr || 0);\n    const maghribAdjustment =\n      (calculationParameters.adjustments.maghrib || 0) +\n      (calculationParameters.methodAdjustments.maghrib || 0);\n    const ishaAdjustment =\n      (calculationParameters.adjustments.isha || 0) +\n      (calculationParameters.methodAdjustments.isha || 0);\n\n    this.fajr = roundedMinute(\n      dateByAddingMinutes(fajrTime, fajrAdjustment),\n      calculationParameters.rounding,\n    );\n    this.sunrise = roundedMinute(\n      dateByAddingMinutes(sunriseTime, sunriseAdjustment),\n      calculationParameters.rounding,\n    );\n    this.dhuhr = roundedMinute(\n      dateByAddingMinutes(dhuhrTime, dhuhrAdjustment),\n      calculationParameters.rounding,\n    );\n    this.asr = roundedMinute(\n      dateByAddingMinutes(asrTime, asrAdjustment),\n      calculationParameters.rounding,\n    );\n    this.maghrib = roundedMinute(\n      dateByAddingMinutes(maghribTime, maghribAdjustment),\n      calculationParameters.rounding,\n    );\n    this.isha = roundedMinute(\n      dateByAddingMinutes(ishaTime, ishaAdjustment),\n      calculationParameters.rounding,\n    );\n  }\n\n  timeForPrayer(prayer) {\n    if (prayer === Prayer.Fajr) {\n      return this.fajr;\n    } else if (prayer === Prayer.Sunrise) {\n      return this.sunrise;\n    } else if (prayer === Prayer.Dhuhr) {\n      return this.dhuhr;\n    } else if (prayer === Prayer.Asr) {\n      return this.asr;\n    } else if (prayer === Prayer.Maghrib) {\n      return this.maghrib;\n    } else if (prayer === Prayer.Isha) {\n      return this.isha;\n    } else {\n      return null;\n    }\n  }\n\n  currentPrayer(date) {\n    if (typeof date === 'undefined') {\n      date = new Date();\n    }\n    if (date >= this.isha) {\n      return Prayer.Isha;\n    } else if (date >= this.maghrib) {\n      return Prayer.Maghrib;\n    } else if (date >= this.asr) {\n      return Prayer.Asr;\n    } else if (date >= this.dhuhr) {\n      return Prayer.Dhuhr;\n    } else if (date >= this.sunrise) {\n      return Prayer.Sunrise;\n    } else if (date >= this.fajr) {\n      return Prayer.Fajr;\n    } else {\n      return Prayer.None;\n    }\n  }\n\n  nextPrayer(date) {\n    if (typeof date === 'undefined') {\n      date = new Date();\n    }\n    if (date >= this.isha) {\n      return Prayer.None;\n    } else if (date >= this.maghrib) {\n      return Prayer.Isha;\n    } else if (date >= this.asr) {\n      return Prayer.Maghrib;\n    } else if (date >= this.dhuhr) {\n      return Prayer.Asr;\n    } else if (date >= this.sunrise) {\n      return Prayer.Dhuhr;\n    } else if (date >= this.fajr) {\n      return Prayer.Sunrise;\n    } else {\n      return Prayer.Fajr;\n    }\n  }\n}\n","const HighLatitudeRule = {\n  MiddleOfTheNight: 'middleofthenight',\n  SeventhOfTheNight: 'seventhofthenight',\n  TwilightAngle: 'twilightangle',\n\n  recommended(coordinates) {\n    if (coordinates.latitude > 48) {\n      return HighLatitudeRule.SeventhOfTheNight;\n    } else {\n      return HighLatitudeRule.MiddleOfTheNight;\n    }\n  },\n};\n\nexport default HighLatitudeRule;\n","import { Madhab } from './Madhab';\nimport HighLatitudeRule from './HighLatitudeRule';\nimport { PolarCircleResolution } from './PolarCircleResolution';\nimport { Rounding } from './Rounding';\nimport { Shafaq } from './Shafaq';\n\nexport default class CalculationParameters {\n  constructor(methodName, fajrAngle, ishaAngle, ishaInterval, maghribAngle) {\n    // Name of the method, can be used to apply special behavior in calculations.\n    // This property should not be manually modified.\n    this.method = methodName || 'Other';\n\n    // Angle of the sun below the horizon used for calculating Fajr.\n    this.fajrAngle = fajrAngle || 0;\n\n    // Angle of the sun below the horizon used for calculating Isha.\n    this.ishaAngle = ishaAngle || 0;\n\n    // Minutes after Maghrib to determine time for Isha\n    // if this value is greater than 0 then ishaAngle is not used.\n    this.ishaInterval = ishaInterval || 0;\n\n    // Angle of the sun below the horizon used for calculating Maghrib.\n    // Only used by the Tehran method to account for lightness in the sky.\n    this.maghribAngle = maghribAngle;\n\n    // Madhab to determine how Asr is calculated.\n    this.madhab = Madhab.Shafi;\n\n    // Rule to determine the earliest time for Fajr and latest time for Isha\n    // needed for high latitude locations where Fajr and Isha may not truly exist\n    // or may present a hardship unless bound to a reasonable time.\n    this.highLatitudeRule = HighLatitudeRule.MiddleOfTheNight;\n\n    // Manual adjustments (in minutes) to be added to each prayer time.\n    this.adjustments = {\n      fajr: 0,\n      sunrise: 0,\n      dhuhr: 0,\n      asr: 0,\n      maghrib: 0,\n      isha: 0,\n    };\n\n    // Adjustments set by a calculation method. This value should not be manually modified.\n    this.methodAdjustments = {\n      fajr: 0,\n      sunrise: 0,\n      dhuhr: 0,\n      asr: 0,\n      maghrib: 0,\n      isha: 0,\n    };\n\n    // Rule to determine how to resolve prayer times inside the Polar Circle\n    // where daylight or night may persist for more than 24 hours depending\n    // on the season\n    this.polarCircleResolution = PolarCircleResolution.Unresolved;\n\n    // How seconds are rounded when calculating prayer times\n    this.rounding = Rounding.Nearest;\n\n    // Used by the MoonsightingCommittee method to determine how to calculate Isha\n    this.shafaq = Shafaq.General;\n  }\n\n  nightPortions() {\n    switch (this.highLatitudeRule) {\n      case HighLatitudeRule.MiddleOfTheNight:\n        return { fajr: 1 / 2, isha: 1 / 2 };\n      case HighLatitudeRule.SeventhOfTheNight:\n        return { fajr: 1 / 7, isha: 1 / 7 };\n      case HighLatitudeRule.TwilightAngle:\n        return { fajr: this.fajrAngle / 60, isha: this.ishaAngle / 60 };\n      default:\n        throw `Invalid high latitude rule found when attempting to compute night portions: ${this.highLatitudeRule}`;\n    }\n  }\n}\n","import CalculationParameters from './CalculationParameters';\nimport { Rounding } from './Rounding';\n\nconst CalculationMethod = {\n  // Muslim World League\n  MuslimWorldLeague() {\n    const params = new CalculationParameters('MuslimWorldLeague', 18, 17);\n    params.methodAdjustments = { dhuhr: 1 };\n    return params;\n  },\n\n  // Egyptian General Authority of Survey\n  Egyptian() {\n    const params = new CalculationParameters('Egyptian', 19.5, 17.5);\n    params.methodAdjustments = { dhuhr: 1 };\n    return params;\n  },\n\n  // University of Islamic Sciences, Karachi\n  Karachi() {\n    const params = new CalculationParameters('Karachi', 18, 18);\n    params.methodAdjustments = { dhuhr: 1 };\n    return params;\n  },\n\n  // Umm al-Qura University, Makkah\n  UmmAlQura() {\n    return new CalculationParameters('UmmAlQura', 18.5, 0, 90);\n  },\n\n  // Dubai\n  Dubai() {\n    const params = new CalculationParameters('Dubai', 18.2, 18.2);\n    params.methodAdjustments = { sunrise: -3, dhuhr: 3, asr: 3, maghrib: 3 };\n    return params;\n  },\n\n  // Moonsighting Committee\n  MoonsightingCommittee() {\n    const params = new CalculationParameters('MoonsightingCommittee', 18, 18);\n    params.methodAdjustments = { dhuhr: 5, maghrib: 3 };\n    return params;\n  },\n\n  // ISNA\n  NorthAmerica() {\n    const params = new CalculationParameters('NorthAmerica', 15, 15);\n    params.methodAdjustments = { dhuhr: 1 };\n    return params;\n  },\n\n  // Kuwait\n  Kuwait() {\n    return new CalculationParameters('Kuwait', 18, 17.5);\n  },\n\n  // Qatar\n  Qatar() {\n    return new CalculationParameters('Qatar', 18, 0, 90);\n  },\n\n  // Singapore\n  Singapore() {\n    const params = new CalculationParameters('Singapore', 20, 18);\n    params.methodAdjustments = { dhuhr: 1 };\n    params.rounding = Rounding.Up;\n    return params;\n  },\n\n  // Institute of Geophysics, University of Tehran\n  Tehran() {\n    const params = new CalculationParameters('Tehran', 17.7, 14, 0, 4.5);\n    return params;\n  },\n\n  // Dianet\n  Turkey() {\n    const params = new CalculationParameters('Turkey', 18, 17);\n    params.methodAdjustments = { sunrise: -7, dhuhr: 5, asr: 4, maghrib: 7 };\n    return params;\n  },\n\n  // Other\n  Other() {\n    return new CalculationParameters('Other', 0, 0);\n  },\n};\n\nexport default CalculationMethod;\n","import Coordinates from './Coordinates';\nimport { degreesToRadians, radiansToDegrees, unwindAngle } from './MathUtils';\n\nexport default function qibla(coordinates) {\n  const makkah = new Coordinates(21.4225241, 39.8261818);\n\n  // Equation from \"Spherical Trigonometry For the use of colleges and schools\" page 50\n  const term1 = Math.sin(\n    degreesToRadians(makkah.longitude) -\n      degreesToRadians(coordinates.longitude),\n  );\n  const term2 =\n    Math.cos(degreesToRadians(coordinates.latitude)) *\n    Math.tan(degreesToRadians(makkah.latitude));\n  const term3 =\n    Math.sin(degreesToRadians(coordinates.latitude)) *\n    Math.cos(\n      degreesToRadians(makkah.longitude) -\n        degreesToRadians(coordinates.longitude),\n    );\n  const angle = Math.atan2(term1, term2 - term3);\n\n  return unwindAngle(radiansToDegrees(angle));\n}\n","import {\n  dateByAddingDays,\n  dateByAddingSeconds,\n  roundedMinute,\n} from './DateUtils';\nimport PrayerTimes from './PrayerTimes';\n\nexport default class SunnahTimes {\n  constructor(prayerTimes) {\n    const date = prayerTimes.date;\n    const nextDay = dateByAddingDays(date, 1);\n    const nextDayPrayerTimes = new PrayerTimes(\n      prayerTimes.coordinates,\n      nextDay,\n      prayerTimes.calculationParameters,\n    );\n\n    const nightDuration =\n      (nextDayPrayerTimes.fajr.getTime() - prayerTimes.maghrib.getTime()) /\n      1000.0;\n\n    this.middleOfTheNight = roundedMinute(\n      dateByAddingSeconds(prayerTimes.maghrib, nightDuration / 2),\n    );\n    this.lastThirdOfTheNight = roundedMinute(\n      dateByAddingSeconds(prayerTimes.maghrib, nightDuration * (2 / 3)),\n    );\n  }\n}\n","import Coordinates from './Coordinates';\nimport PrayerTimes from './PrayerTimes';\nimport Prayer from './Prayer';\nimport { Madhab } from './Madhab';\nimport HighLatitudeRule from './HighLatitudeRule';\nimport CalculationMethod from './CalculationMethod';\nimport CalculationParameters from './CalculationParameters';\nimport Qibla from './Qibla';\nimport SunnahTimes from './SunnahTimes';\nimport { PolarCircleResolution } from './PolarCircleResolution';\nimport { Rounding } from './Rounding';\nimport { Shafaq } from './Shafaq';\n\nconst adhan = {\n  Prayer,\n  Madhab,\n  HighLatitudeRule,\n  Coordinates,\n  CalculationParameters,\n  CalculationMethod,\n  PrayerTimes,\n  SunnahTimes,\n  Qibla,\n  PolarCircleResolution,\n  Rounding,\n  Shafaq,\n};\n\nexport default adhan;\n"],"sourceRoot":""}